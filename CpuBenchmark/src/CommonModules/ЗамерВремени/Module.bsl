
#Область ПрограммныйИнтерфейс

// Инициализировать данные замера.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Инициализировать данные замера:
// * Наименование - Строка - Наименование замера
// * Начало - Число - Начало замера в миллисекундах
// * Конец - Число - Окончание замера в миллисекундах
// * КоличествоИтераций - Число - Количество итераций в замере
// * Длительность - Число - Длительность замера в миллисекундах  
// * КоличествоПотоков - Число - Количество потоков 
// * Дата - Дата - Дата и время замера 
Функция ИнициализироватьДанныеЗамера() Экспорт
	
	ОписаниеЧисла  = Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 0));
	ОписаниеСтрока = Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(70));
	
	ДанныеЗамера = Новый ТаблицаЗначений();
	ДанныеЗамера.Колонки.Добавить("Наименование",ОписаниеСтрока);
	ДанныеЗамера.Колонки.Добавить("Начало", ОписаниеЧисла);
	ДанныеЗамера.Колонки.Добавить("Конец", ОписаниеЧисла);
	ДанныеЗамера.Колонки.Добавить("КоличествоИтераций", ОписаниеЧисла);
	ДанныеЗамера.Колонки.Добавить("Длительность", ОписаниеЧисла);
	ДанныеЗамера.Колонки.Добавить("КоличествоПотоков", ОписаниеЧисла);
	ДанныеЗамера.Колонки.Добавить("Дата",Новый ОписаниеТипов("Дата", , , , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя), ));
		
	Возврат ДанныеЗамера;
КонецФункции

// Начать замер.
// 
// Параметры:
//  ДанныеЗамера - См. ИнициализироватьДанныеЗамера
//  НаименованиеЗамера - Строка - Наименование замера
//  КоличествоИтераций - Число - Количество итераций
//  КоличествоПотоков - Число - Количество итераций
//  
// Возвращаемое значение:
//  СтрокаТаблицыЗначений - Начать замер:
// * Наименование - Строка - Наименование замера//  
// * Начало - Число - Начало замера в миллисекундах
// * Конец - Число - Окончание замера в миллисекундах
// * КоличествоИтераций - Число - Количество итераций в замере
// * Длительность - Число - Длительность замера в миллисекундах
// * КоличествоПотоков - Число - Количество потоков 
// * Дата - Дата - Дата и время начала теста
Функция НачатьЗамер(ДанныеЗамера, Знач НаименованиеЗамера, Знач КоличествоИтераций,Знач КоличествоПотоков) Экспорт
			
	Замер = ДанныеЗамера.Добавить();
	Замер.Наименование = НаименованиеЗамера;
	Замер.Начало = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Замер.КоличествоИтераций = КоличествоИтераций;
	Замер.КоличествоПотоков = КоличествоПотоков;
	Замер.Дата 	= ТекущаяДатаСеанса();
	
	Возврат Замер;
			
КонецФункции

// Завершить замер.
// 
// Параметры:
//  Замер - См. НачатьЗамер
//  КоличествоИтераций - Число - Количество элементов замера
Процедура ЗавершитьЗамер(Замер, Знач КоличествоИтераций = 0) Экспорт

	Если Замер = Неопределено Тогда
		Возврат;
	КонецЕсли;
			
	Если КоличествоИтераций > 0 Тогда
		Замер.КоличествоИтераций = КоличествоИтераций;
	КонецЕсли;
	
	Замер.Конец = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Замер.Длительность = Замер.Конец - Замер.Начало;
	
КонецПроцедуры

#КонецОбласти
